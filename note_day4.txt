【复习】
顺序栈 链式栈 顺序队列

【面试题讲解】
1.编程实现单链表的有序插入

2.编程实现单链表的排序

3.给出一个单链表，不知道节点N的值，怎样只遍历一次就可以求出中间节点，写出算法。

4.描述如何用栈实现队列

【链式队列】
思路见图，代码实践见资料

【球钟问题】
思路见图，代码见资料

【树】
概念：树（Tree）是n（n≥0）个节点的有限集合T，它满足两个条件 ：
有且仅有一个特定的称为根（Root）的节点；
其余的节点可以分为m（m≥0）个互不相交的有限集合T1、T2、……、Tm，其中每一个集合又是一棵树，并称为其根的子树（Subtree）。

【度数】
一个节点的子树的个数称为该节点的度数，一棵树的度数是指该树中节点的最大度数。

【树叶】
度数为零的节点称为树叶或终端节点。

一个节点的子树之根节点称为该节点的子节点，该节点称为它们的父节点，同一节点的各个子节点之间称为兄弟节点。一棵树的根节点没有父节点，叶节点没有子节点。

树的逻辑结构 ：树中任何节点都可以有零个或多个直接后继节点（子节点），但至多只有一个直接前趋节点（父节点），根节点没有前趋节点，叶节点没有后继节点。

【二叉树】
二叉树的定义 ： 二叉树（Binary Tree）是n（n≥0）个节点的有限集合，它或者是空集（n＝0），或者是由一个根节点以及两棵互不相交的、分别称为左子树和右子树的二叉树组成。二叉树与普通有序树不同，二叉树严格区分左孩子和右孩子，即使只有一个子节点也要区分左右。
【顺序存储】
不完全二叉树通过添加虚节点构成完全二叉树，然后用数组存储，这要浪费一些存储空间。

【链式存储】
链式存储结构 ：
typedef  int  data_t ;		/*定义数据类型*/
typedef  struct  node_t;		 /*定义二叉树节点的内部结构*/
{
	data_t data ; 		/*数据域*/
	struct node_t *lchild ,*rchild ; 	/*指向左孩子和右孩子的指针*/
} bitree_t ; 			/*二叉树节点类型*/
bitree_t *root ; 		/*定义指向二叉树的指针*/ 

二叉树由根节点指针决定。

